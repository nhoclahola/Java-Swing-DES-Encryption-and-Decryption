/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.crypto.SecretKey;
import des.DES;
import des.DoubleDES;
import des.TripleDES;
import java.awt.Image;
import java.awt.Toolkit;
import javax.crypto.Cipher;

/**
 *
 * @author nhoclahola
 */
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.net.URL;
public class DESForm extends javax.swing.JFrame
{

    /**
     * Creates new form DESForm
     */
    public DESForm()
    {
        //Set icon
        //Lấy đường dẫn của icon
        URL urlNotepadIcon = this.getClass().getResource("data-security.png");
        Image img = Toolkit.getDefaultToolkit().createImage(urlNotepadIcon);
        this.setIconImage(img);
        initComponents();
        this.setLocationRelativeTo(null);
        jLabel7.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextKey1 = new javax.swing.JTextField();
        jTextKey2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DES Encrypt - Decrypt");
        setResizable(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Encrypt", "Decrypt" }));

        jLabel1.setText("Encrypt/Decrypt");

        jLabel2.setText("DES");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DES", "Double DES", "Triple DES" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextKey2.setEnabled(false);

        jLabel3.setText("Key");

        jLabel4.setText("Text");

        jLabel5.setText("Result (Encoding standard will be base64)");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setText("Encrypt/Decrypt");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Key 2 (For Double DES only)");
        jLabel6.setEnabled(false);

        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Warning: Key must be 192 bits (24 characters)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(67, 67, 67)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel6))
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextKey1)
                                            .addComponent(jTextKey2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23))
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel7)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextKey1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextKey2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(jLabel7)
                .addGap(2, 2, 2)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBox2ActionPerformed
    {//GEN-HEADEREND:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        String select = jComboBox2.getSelectedItem().toString();
        if (select.equals("Triple DES"))
            jLabel7.setVisible(true);
        else
            jLabel7.setVisible(false);
        if (select.equals("Double DES"))
        {
            jLabel6.setEnabled(true);
            jTextKey2.setEnabled(true);
        }
        else
        {
            jLabel6.setEnabled(false);
            jTextKey2.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTextKey1.getText().equals(""))
        {
            jTextArea2.setText("Require key");
            return;
        }
        
        //Encrypt - Decrypt
        String select = jComboBox1.getSelectedItem().toString();
        String DEStype = jComboBox2.getSelectedItem().toString();
        if (DEStype.equals("DES"))
        {
            if (select.equals("Encrypt"))
            {
                try 
                {
                    Cipher cipher = Cipher.getInstance("DES");
                    String key = jTextKey1.getText();
                    String plainText = jTextArea1.getText();
                    SecretKey secretKey = DES.generateSecretKey(key);
                    String encryptedText = DES.encrypt(plainText, secretKey, cipher);
                    jTextArea2.setText(encryptedText);
                }
                catch (Exception ex) 
                {
                    jTextArea2.setText(ex.getMessage());
                }
            }
            else if (select.equals("Decrypt"))
            {
                try 
                {
                    Cipher cipher = Cipher.getInstance("DES");
                    String key = jTextKey1.getText();
                    String cipherText = jTextArea1.getText();
                    SecretKey secretKey = DES.generateSecretKey(key);
                    String decryptedText = DES.decrypt(cipherText, secretKey, cipher);
                    jTextArea2.setText(decryptedText);
                }
                catch (Exception ex) 
                {
                    jTextArea2.setText(ex.getMessage());
                }
            }
        }
        else if (DEStype.equals("Double DES"))
        {
            if (select.equals("Encrypt"))
            {
                try 
                {
                    Cipher cipher = Cipher.getInstance("DES");
                    String key1 = jTextKey1.getText();
                    String key2 = jTextKey2.getText();
                    String plainText = jTextArea1.getText();
                    SecretKey secretKey1 = DoubleDES.generateSecretKey(key1);
                    SecretKey secretKey2 = DoubleDES.generateSecretKey(key2);
                    String encryptedText = DoubleDES.encrypt(plainText, secretKey1, secretKey2, cipher);
                    jTextArea2.setText(encryptedText);
                }
                catch (Exception ex) 
                {
                    jTextArea2.setText(ex.getMessage());
                }
            }
            else if (select.equals("Decrypt"))
            {
                try 
                {
                    Cipher cipher = Cipher.getInstance("DES");
                    String key1 = jTextKey1.getText();
                    String key2 = jTextKey2.getText();
                    String plainText = jTextArea1.getText();
                    SecretKey secretKey1 = DoubleDES.generateSecretKey(key1);
                    SecretKey secretKey2 = DoubleDES.generateSecretKey(key2);
                    String encryptedText = DoubleDES.decrypt(plainText, secretKey1, secretKey2, cipher);
                    jTextArea2.setText(encryptedText);
                }
                catch (Exception ex) 
                {
                    jTextArea2.setText(ex.getMessage());
                }
            }
        }
        else if (DEStype.equals("Triple DES"))
        {
            if (select.equals("Encrypt"))
            {
                try 
                {
                    Cipher cipher = Cipher.getInstance("DES");
                    String key = jTextKey1.getText();
                    String plainText = jTextArea1.getText();
                    String encryptedText = TripleDES.encrypt(plainText, key);
                    jTextArea2.setText(encryptedText);
                }
                catch (Exception ex) 
                {
                    jTextArea2.setText(ex.getMessage());
                }
            }
            else if (select.equals("Decrypt"))
            {
                try 
                {
                    Cipher cipher = Cipher.getInstance("DES");
                    String key = jTextKey1.getText();
                    String plainText = jTextArea1.getText();
                    String encryptedText = TripleDES.decrypt(plainText, key);
                    jTextArea2.setText(encryptedText);
                }
                catch (Exception ex) 
                {
                    jTextArea2.setText(ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(DESForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(DESForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(DESForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(DESForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new DESForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextKey1;
    private javax.swing.JTextField jTextKey2;
    // End of variables declaration//GEN-END:variables
}
